{"version":3,"sources":["webpack:///dist/live-coder.min.js","webpack:///webpack/bootstrap 8b591c2f45e34fa73beb","webpack:///./src/index.ts","webpack:///./src/deferred.ts","webpack:///./src/utils.ts"],"names":["Live","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","CoderState","deferred_1","utils_1","Coder","config","this","Object","assign","DEFAULT_CONFIG","domReady","waitForDom","paused","Deferred","init","isElementAttached","$elem","parentElement","appendIfApply","apply","$container","toLowerCase","appendChild","prototype","_this","then","$runner","document","getElementsByTagName","body","$defContainer","createElement","defaultContainer","$body","$display","createDisplay","pauseOnClick","addEventListener","clickPause","bind","pause","resume","state","PAUSED","READY_PAUSED","READY","RUNNING","tagName","props","$appendTo","_i","_a","keys","length","propName","className","displayClass","createStyle","type","createScript","writeAndScrollDisplay","char","textContent","scrollTop","scrollHeight","run","code","Promise","all","promise","$style","$element","elemInnerHtml","$script","lines","trim","split","asyncForOf","line","forOfPromise","returnPromise","resolve","chars","matchDir","match","DIR_RE","typingSpeed","directive","rest","slice","elem","_b","matchSel","SEL_RE","querySelector","_c","symbol","name_1","innerHTML","window","setTypingSpeed","reject","asyncLoop","fn","condition","delay","deferred","loop","setTimeout","catch","array","index","conditionLoop","bodyLoop","value"],"mappings":"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","file":"dist/live-coder.min.js","sourcesContent":["var Live =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar deferred_1 = __webpack_require__(1);\n\tvar utils_1 = __webpack_require__(2);\n\tvar CoderState;\n\t(function (CoderState) {\n\t    CoderState[CoderState[\"READY\"] = 0] = \"READY\";\n\t    CoderState[CoderState[\"RUNNING\"] = 1] = \"RUNNING\";\n\t    CoderState[CoderState[\"PAUSED\"] = 2] = \"PAUSED\";\n\t    CoderState[CoderState[\"READY_PAUSED\"] = 3] = \"READY_PAUSED\";\n\t})(CoderState = exports.CoderState || (exports.CoderState = {}));\n\tvar Coder = (function () {\n\t    function Coder(config) {\n\t        if (config === void 0) { config = {}; }\n\t        this.config = Object.assign({}, Coder.DEFAULT_CONFIG, config);\n\t        this.domReady = utils_1.waitForDom();\n\t        this.paused = new deferred_1.Deferred();\n\t        this.init();\n\t    }\n\t    Coder.isElementAttached = function ($elem) {\n\t        return !!$elem.parentElement;\n\t    };\n\t    Coder.appendIfApply = function (apply, $elem, $container) {\n\t        if (apply &&\n\t            $elem &&\n\t            apply.toLowerCase() === 'apply' &&\n\t            !Coder.isElementAttached($elem)) {\n\t            $container && $container.appendChild($elem);\n\t        }\n\t    };\n\t    Coder.prototype.init = function () {\n\t        var _this = this;\n\t        this.domReady.then(function () {\n\t            _this.$runner = document.getElementsByTagName('head')[0] || document.body;\n\t            _this.$defContainer = _this.createElement(_this.config.defaultContainer);\n\t            _this.$body = document.body;\n\t            _this.$display = _this.createDisplay();\n\t            if (_this.config.pauseOnClick) {\n\t                document.addEventListener('click', _this.clickPause.bind(_this));\n\t            }\n\t            if (_this.config.paused) {\n\t                _this.pause();\n\t            }\n\t            else {\n\t                _this.resume();\n\t            }\n\t        });\n\t    };\n\t    Coder.prototype.clickPause = function () {\n\t        switch (this.state) {\n\t            case CoderState.PAUSED:\n\t            case CoderState.READY_PAUSED:\n\t                this.resume();\n\t                break;\n\t            case CoderState.READY:\n\t            case CoderState.RUNNING:\n\t                this.pause();\n\t                break;\n\t        }\n\t    };\n\t    Coder.prototype.createElement = function (tagName, props, $appendTo) {\n\t        if (props === void 0) { props = {}; }\n\t        var $elem = document.createElement(tagName);\n\t        for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n\t            var propName = _a[_i];\n\t            $elem[propName] = props[propName];\n\t        }\n\t        if ($appendTo) {\n\t            $appendTo.appendChild($elem);\n\t        }\n\t        return $elem;\n\t    };\n\t    Coder.prototype.createDisplay = function () {\n\t        return this.createElement('pre', { className: this.config.displayClass }, document.body);\n\t    };\n\t    Coder.prototype.createStyle = function (type) {\n\t        if (type === void 0) { type = 'text/css'; }\n\t        return this.createElement('style', { type: type });\n\t    };\n\t    Coder.prototype.createScript = function (type) {\n\t        if (type === void 0) { type = 'text/javascript'; }\n\t        return this.createElement('script', { type: type });\n\t    };\n\t    Coder.prototype.writeAndScrollDisplay = function (char) {\n\t        this.$display.textContent += char;\n\t        this.$display.scrollTop = this.$display.scrollHeight;\n\t    };\n\t    Coder.prototype.run = function (code) {\n\t        var _this = this;\n\t        if (code === void 0) { code = ''; }\n\t        return Promise.all([\n\t            this.paused.promise,\n\t            this.domReady\n\t        ]).then(function () {\n\t            _this.state = CoderState.RUNNING;\n\t            var lines = code.trim().split('\\n');\n\t            var $style;\n\t            var $element;\n\t            var elemInnerHtml;\n\t            var $script;\n\t            return utils_1.asyncForOf(function (line) {\n\t                var forOfPromise;\n\t                var returnPromise = Promise.resolve();\n\t                var chars = line.split('');\n\t                var matchDir = line.match(Coder.DIR_RE);\n\t                if (matchDir) {\n\t                    forOfPromise = utils_1.asyncForOf(function (char) {\n\t                        _this.writeAndScrollDisplay(char);\n\t                        return Promise.all([_this.paused.promise, returnPromise]);\n\t                    }, chars, _this.config.typingSpeed).then(function () {\n\t                        _this.$display.textContent += '\\n';\n\t                        var _a = matchDir[1].split(':'), directive = _a[0], rest = _a.slice(1);\n\t                        switch (directive.toLowerCase()) {\n\t                            case 'css':\n\t                                // --- css\n\t                                // --- css:apply\n\t                                $script = null;\n\t                                $element = null;\n\t                                elemInnerHtml = '';\n\t                                $style = _this.createStyle();\n\t                                Coder.appendIfApply(rest[0], $style, _this.$runner);\n\t                                break;\n\t                            case 'js':\n\t                                $style = null;\n\t                                $element = null;\n\t                                elemInnerHtml = '';\n\t                                $script = _this.createScript();\n\t                                // can't be apply at this point, only at the end,\n\t                                // would throw exeptions\n\t                                break;\n\t                            case 'html':\n\t                                // --- html ($defContainer)\n\t                                // --- html:apply ($defContainer)\n\t                                // --- html:tag\n\t                                // --- html:tag.class\n\t                                // --- html:.class (tag = div)\n\t                                // --- html:tag#id\n\t                                // --- html:#id (tag = div)\n\t                                // --- html:tag:apply\n\t                                // --- html:apply:tag\n\t                                $script = null;\n\t                                $style = null;\n\t                                elemInnerHtml = '';\n\t                                if (rest[0]) {\n\t                                    var elem = rest[0], apply = rest[1];\n\t                                    // let's swap if the first one is \"apply\"\n\t                                    if (elem.toLowerCase() === 'apply') {\n\t                                        _b = [apply || '', elem], elem = _b[0], apply = _b[1];\n\t                                    }\n\t                                    var matchSel = elem.match(Coder.SEL_RE);\n\t                                    // valid selector?\n\t                                    if (elem && matchSel) {\n\t                                        $element = document.querySelector(elem);\n\t                                        // does the element exist in the DOM?\n\t                                        if (!$element) {\n\t                                            var _c = [\n\t                                                matchSel[1] || 'div',\n\t                                                matchSel[3],\n\t                                                matchSel[4]\n\t                                            ], tagName = _c[0], symbol = _c[1], name_1 = _c[2];\n\t                                            $element = _this.createElement(tagName);\n\t                                            if (symbol && name_1) {\n\t                                                // I know, this is crappy. Only supports classes or ids\n\t                                                // and not even combined. TODO: make it better\n\t                                                switch (symbol) {\n\t                                                    case '.':\n\t                                                        $element.className = name_1;\n\t                                                        break;\n\t                                                    case '#':\n\t                                                        $element.id = name_1;\n\t                                                        break;\n\t                                                }\n\t                                            }\n\t                                            Coder.appendIfApply(apply, $element, _this.$body);\n\t                                        }\n\t                                    }\n\t                                    else {\n\t                                        $element = _this.$defContainer;\n\t                                        Coder.appendIfApply(apply, $element, _this.$body);\n\t                                    }\n\t                                }\n\t                                $element = $element || _this.$defContainer;\n\t                                // in case there was already content\n\t                                // we can continue writing html in the element\n\t                                elemInnerHtml = $element.innerHTML;\n\t                                break;\n\t                            case 'apply':\n\t                                if ($style && !Coder.isElementAttached($style)) {\n\t                                    _this.$runner.appendChild($style);\n\t                                    $style = _this.createStyle();\n\t                                }\n\t                                else if ($element && !Coder.isElementAttached($element)) {\n\t                                    _this.$body.appendChild($element);\n\t                                }\n\t                                else if ($script && !Coder.isElementAttached($script)) {\n\t                                    _this.$runner.appendChild($script);\n\t                                    $script = _this.createScript();\n\t                                }\n\t                                break;\n\t                            case 'await': // --- await:promiseVar\n\t                            case 'promise':\n\t                                if (window[rest[0]] instanceof Promise) {\n\t                                    returnPromise = window[rest[0]];\n\t                                }\n\t                                break;\n\t                        }\n\t                        return Promise.all([_this.paused.promise, returnPromise]);\n\t                        var _b;\n\t                    });\n\t                }\n\t                else {\n\t                    forOfPromise = utils_1.asyncForOf(function (char) {\n\t                        _this.writeAndScrollDisplay(char);\n\t                        if ($style) {\n\t                            $style.textContent += char;\n\t                        }\n\t                        else if ($element) {\n\t                            // in order to be able to write dynamic html and\n\t                            // see the changes right away, we need to store\n\t                            // the html as a string and innerHTML this string\n\t                            // into the the element right away. If we don't do so,\n\t                            // we lose markup because it becomes invalid and gets lost\n\t                            elemInnerHtml += char;\n\t                            $element.innerHTML = elemInnerHtml;\n\t                        }\n\t                        else if ($script) {\n\t                            $script.textContent += char;\n\t                        }\n\t                        return Promise.all([_this.paused.promise, returnPromise]);\n\t                    }, chars, _this.config.typingSpeed).then(function () {\n\t                        _this.writeAndScrollDisplay('\\n');\n\t                        if ($style) {\n\t                            $style.textContent += '\\n';\n\t                        }\n\t                        else if ($script) {\n\t                            $script.textContent += '\\n';\n\t                        }\n\t                        return Promise.all([_this.paused.promise, returnPromise]);\n\t                    });\n\t                }\n\t                return forOfPromise;\n\t            }, lines).then(function () {\n\t                $style = null;\n\t                $element = null;\n\t                elemInnerHtml = '';\n\t                $script = null;\n\t                _this.state = CoderState.READY;\n\t                return Promise.resolve();\n\t            });\n\t        });\n\t    };\n\t    Coder.prototype.setTypingSpeed = function (typingSpeed) {\n\t        this.config.typingSpeed = typingSpeed;\n\t    };\n\t    Coder.prototype.pause = function () {\n\t        this.paused = new deferred_1.Deferred();\n\t        if (this.state === CoderState.READY) {\n\t            this.state = CoderState.READY_PAUSED;\n\t        }\n\t        else {\n\t            this.state = CoderState.PAUSED;\n\t        }\n\t    };\n\t    Coder.prototype.resume = function () {\n\t        this.paused.resolve();\n\t        if (this.state === CoderState.READY_PAUSED) {\n\t            this.state = CoderState.READY;\n\t        }\n\t        else {\n\t            this.state = CoderState.RUNNING;\n\t        }\n\t    };\n\t    return Coder;\n\t}());\n\tCoder.DIR_RE = /^\\s*---\\s*([a-z0-9|\\-|_|\\.|#|:]+)?/i;\n\tCoder.SEL_RE = /^([a-z0-9|\\-|_]+)?((\\.|#)([a-z0-9|\\-|_]+))?$/i;\n\tCoder.DEFAULT_CONFIG = {\n\t    displayClass: 'live-coder__display',\n\t    defaultContainer: 'default-container',\n\t    typingSpeed: 50,\n\t    pauseOnClick: true,\n\t    paused: false\n\t};\n\texports.Coder = Coder;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar Deferred = (function () {\n\t    function Deferred() {\n\t        var _this = this;\n\t        this.promise = new Promise(function (resolve, reject) {\n\t            _this.resolve = resolve;\n\t            _this.reject = reject;\n\t        });\n\t    }\n\t    return Deferred;\n\t}());\n\texports.Deferred = Deferred;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar deferred_1 = __webpack_require__(1);\n\tfunction asyncLoop(fn, condition, delay) {\n\t    var deferred = new deferred_1.Deferred();\n\t    var loop = function () {\n\t        if (condition()) {\n\t            fn()\n\t                .then(function () {\n\t                if (delay) {\n\t                    setTimeout(loop, delay);\n\t                }\n\t                else {\n\t                    loop();\n\t                }\n\t            })\n\t                .catch(function () { return deferred.reject(); });\n\t        }\n\t        else {\n\t            deferred.resolve();\n\t        }\n\t    };\n\t    loop();\n\t    return deferred.promise;\n\t}\n\texports.asyncLoop = asyncLoop;\n\tfunction asyncForOf(fn, array, delay) {\n\t    var index = 0;\n\t    var length = array.length;\n\t    var value;\n\t    var conditionLoop = function () { return index < length; };\n\t    var bodyLoop = function () {\n\t        var value = array[index];\n\t        var promise = fn(value);\n\t        index++;\n\t        return promise;\n\t    };\n\t    return asyncLoop(bodyLoop, conditionLoop, delay);\n\t}\n\texports.asyncForOf = asyncForOf;\n\tfunction waitForDom() {\n\t    return new Promise(function (resolve) {\n\t        document.addEventListener('DOMContentLoaded', function () { return resolve(); });\n\t    });\n\t}\n\texports.waitForDom = waitForDom;\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// dist/live-coder.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8b591c2f45e34fa73beb","\"use strict\";\nvar deferred_1 = require(\"./deferred\");\nvar utils_1 = require(\"./utils\");\nvar CoderState;\n(function (CoderState) {\n    CoderState[CoderState[\"READY\"] = 0] = \"READY\";\n    CoderState[CoderState[\"RUNNING\"] = 1] = \"RUNNING\";\n    CoderState[CoderState[\"PAUSED\"] = 2] = \"PAUSED\";\n    CoderState[CoderState[\"READY_PAUSED\"] = 3] = \"READY_PAUSED\";\n})(CoderState = exports.CoderState || (exports.CoderState = {}));\nvar Coder = (function () {\n    function Coder(config) {\n        if (config === void 0) { config = {}; }\n        this.config = Object.assign({}, Coder.DEFAULT_CONFIG, config);\n        this.domReady = utils_1.waitForDom();\n        this.paused = new deferred_1.Deferred();\n        this.init();\n    }\n    Coder.isElementAttached = function ($elem) {\n        return !!$elem.parentElement;\n    };\n    Coder.appendIfApply = function (apply, $elem, $container) {\n        if (apply &&\n            $elem &&\n            apply.toLowerCase() === 'apply' &&\n            !Coder.isElementAttached($elem)) {\n            $container && $container.appendChild($elem);\n        }\n    };\n    Coder.prototype.init = function () {\n        var _this = this;\n        this.domReady.then(function () {\n            _this.$runner = document.getElementsByTagName('head')[0] || document.body;\n            _this.$defContainer = _this.createElement(_this.config.defaultContainer);\n            _this.$body = document.body;\n            _this.$display = _this.createDisplay();\n            if (_this.config.pauseOnClick) {\n                document.addEventListener('click', _this.clickPause.bind(_this));\n            }\n            if (_this.config.paused) {\n                _this.pause();\n            }\n            else {\n                _this.resume();\n            }\n        });\n    };\n    Coder.prototype.clickPause = function () {\n        switch (this.state) {\n            case CoderState.PAUSED:\n            case CoderState.READY_PAUSED:\n                this.resume();\n                break;\n            case CoderState.READY:\n            case CoderState.RUNNING:\n                this.pause();\n                break;\n        }\n    };\n    Coder.prototype.createElement = function (tagName, props, $appendTo) {\n        if (props === void 0) { props = {}; }\n        var $elem = document.createElement(tagName);\n        for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n            var propName = _a[_i];\n            $elem[propName] = props[propName];\n        }\n        if ($appendTo) {\n            $appendTo.appendChild($elem);\n        }\n        return $elem;\n    };\n    Coder.prototype.createDisplay = function () {\n        return this.createElement('pre', { className: this.config.displayClass }, document.body);\n    };\n    Coder.prototype.createStyle = function (type) {\n        if (type === void 0) { type = 'text/css'; }\n        return this.createElement('style', { type: type });\n    };\n    Coder.prototype.createScript = function (type) {\n        if (type === void 0) { type = 'text/javascript'; }\n        return this.createElement('script', { type: type });\n    };\n    Coder.prototype.writeAndScrollDisplay = function (char) {\n        this.$display.textContent += char;\n        this.$display.scrollTop = this.$display.scrollHeight;\n    };\n    Coder.prototype.run = function (code) {\n        var _this = this;\n        if (code === void 0) { code = ''; }\n        return Promise.all([\n            this.paused.promise,\n            this.domReady\n        ]).then(function () {\n            _this.state = CoderState.RUNNING;\n            var lines = code.trim().split('\\n');\n            var $style;\n            var $element;\n            var elemInnerHtml;\n            var $script;\n            return utils_1.asyncForOf(function (line) {\n                var forOfPromise;\n                var returnPromise = Promise.resolve();\n                var chars = line.split('');\n                var matchDir = line.match(Coder.DIR_RE);\n                if (matchDir) {\n                    forOfPromise = utils_1.asyncForOf(function (char) {\n                        _this.writeAndScrollDisplay(char);\n                        return Promise.all([_this.paused.promise, returnPromise]);\n                    }, chars, _this.config.typingSpeed).then(function () {\n                        _this.$display.textContent += '\\n';\n                        var _a = matchDir[1].split(':'), directive = _a[0], rest = _a.slice(1);\n                        switch (directive.toLowerCase()) {\n                            case 'css':\n                                // --- css\n                                // --- css:apply\n                                $script = null;\n                                $element = null;\n                                elemInnerHtml = '';\n                                $style = _this.createStyle();\n                                Coder.appendIfApply(rest[0], $style, _this.$runner);\n                                break;\n                            case 'js':\n                                $style = null;\n                                $element = null;\n                                elemInnerHtml = '';\n                                $script = _this.createScript();\n                                // can't be apply at this point, only at the end,\n                                // would throw exeptions\n                                break;\n                            case 'html':\n                                // --- html ($defContainer)\n                                // --- html:apply ($defContainer)\n                                // --- html:tag\n                                // --- html:tag.class\n                                // --- html:.class (tag = div)\n                                // --- html:tag#id\n                                // --- html:#id (tag = div)\n                                // --- html:tag:apply\n                                // --- html:apply:tag\n                                $script = null;\n                                $style = null;\n                                elemInnerHtml = '';\n                                if (rest[0]) {\n                                    var elem = rest[0], apply = rest[1];\n                                    // let's swap if the first one is \"apply\"\n                                    if (elem.toLowerCase() === 'apply') {\n                                        _b = [apply || '', elem], elem = _b[0], apply = _b[1];\n                                    }\n                                    var matchSel = elem.match(Coder.SEL_RE);\n                                    // valid selector?\n                                    if (elem && matchSel) {\n                                        $element = document.querySelector(elem);\n                                        // does the element exist in the DOM?\n                                        if (!$element) {\n                                            var _c = [\n                                                matchSel[1] || 'div',\n                                                matchSel[3],\n                                                matchSel[4]\n                                            ], tagName = _c[0], symbol = _c[1], name_1 = _c[2];\n                                            $element = _this.createElement(tagName);\n                                            if (symbol && name_1) {\n                                                // I know, this is crappy. Only supports classes or ids\n                                                // and not even combined. TODO: make it better\n                                                switch (symbol) {\n                                                    case '.':\n                                                        $element.className = name_1;\n                                                        break;\n                                                    case '#':\n                                                        $element.id = name_1;\n                                                        break;\n                                                }\n                                            }\n                                            Coder.appendIfApply(apply, $element, _this.$body);\n                                        }\n                                    }\n                                    else {\n                                        $element = _this.$defContainer;\n                                        Coder.appendIfApply(apply, $element, _this.$body);\n                                    }\n                                }\n                                $element = $element || _this.$defContainer;\n                                // in case there was already content\n                                // we can continue writing html in the element\n                                elemInnerHtml = $element.innerHTML;\n                                break;\n                            case 'apply':\n                                if ($style && !Coder.isElementAttached($style)) {\n                                    _this.$runner.appendChild($style);\n                                    $style = _this.createStyle();\n                                }\n                                else if ($element && !Coder.isElementAttached($element)) {\n                                    _this.$body.appendChild($element);\n                                }\n                                else if ($script && !Coder.isElementAttached($script)) {\n                                    _this.$runner.appendChild($script);\n                                    $script = _this.createScript();\n                                }\n                                break;\n                            case 'await': // --- await:promiseVar\n                            case 'promise':\n                                if (window[rest[0]] instanceof Promise) {\n                                    returnPromise = window[rest[0]];\n                                }\n                                break;\n                        }\n                        return Promise.all([_this.paused.promise, returnPromise]);\n                        var _b;\n                    });\n                }\n                else {\n                    forOfPromise = utils_1.asyncForOf(function (char) {\n                        _this.writeAndScrollDisplay(char);\n                        if ($style) {\n                            $style.textContent += char;\n                        }\n                        else if ($element) {\n                            // in order to be able to write dynamic html and\n                            // see the changes right away, we need to store\n                            // the html as a string and innerHTML this string\n                            // into the the element right away. If we don't do so,\n                            // we lose markup because it becomes invalid and gets lost\n                            elemInnerHtml += char;\n                            $element.innerHTML = elemInnerHtml;\n                        }\n                        else if ($script) {\n                            $script.textContent += char;\n                        }\n                        return Promise.all([_this.paused.promise, returnPromise]);\n                    }, chars, _this.config.typingSpeed).then(function () {\n                        _this.writeAndScrollDisplay('\\n');\n                        if ($style) {\n                            $style.textContent += '\\n';\n                        }\n                        else if ($script) {\n                            $script.textContent += '\\n';\n                        }\n                        return Promise.all([_this.paused.promise, returnPromise]);\n                    });\n                }\n                return forOfPromise;\n            }, lines).then(function () {\n                $style = null;\n                $element = null;\n                elemInnerHtml = '';\n                $script = null;\n                _this.state = CoderState.READY;\n                return Promise.resolve();\n            });\n        });\n    };\n    Coder.prototype.setTypingSpeed = function (typingSpeed) {\n        this.config.typingSpeed = typingSpeed;\n    };\n    Coder.prototype.pause = function () {\n        this.paused = new deferred_1.Deferred();\n        if (this.state === CoderState.READY) {\n            this.state = CoderState.READY_PAUSED;\n        }\n        else {\n            this.state = CoderState.PAUSED;\n        }\n    };\n    Coder.prototype.resume = function () {\n        this.paused.resolve();\n        if (this.state === CoderState.READY_PAUSED) {\n            this.state = CoderState.READY;\n        }\n        else {\n            this.state = CoderState.RUNNING;\n        }\n    };\n    return Coder;\n}());\nCoder.DIR_RE = /^\\s*---\\s*([a-z0-9|\\-|_|\\.|#|:]+)?/i;\nCoder.SEL_RE = /^([a-z0-9|\\-|_]+)?((\\.|#)([a-z0-9|\\-|_]+))?$/i;\nCoder.DEFAULT_CONFIG = {\n    displayClass: 'live-coder__display',\n    defaultContainer: 'default-container',\n    typingSpeed: 50,\n    pauseOnClick: true,\n    paused: false\n};\nexports.Coder = Coder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 0\n// module chunks = 0","\"use strict\";\nvar Deferred = (function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    }\n    return Deferred;\n}());\nexports.Deferred = Deferred;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/deferred.ts\n// module id = 1\n// module chunks = 0","\"use strict\";\nvar deferred_1 = require(\"./deferred\");\nfunction asyncLoop(fn, condition, delay) {\n    var deferred = new deferred_1.Deferred();\n    var loop = function () {\n        if (condition()) {\n            fn()\n                .then(function () {\n                if (delay) {\n                    setTimeout(loop, delay);\n                }\n                else {\n                    loop();\n                }\n            })\n                .catch(function () { return deferred.reject(); });\n        }\n        else {\n            deferred.resolve();\n        }\n    };\n    loop();\n    return deferred.promise;\n}\nexports.asyncLoop = asyncLoop;\nfunction asyncForOf(fn, array, delay) {\n    var index = 0;\n    var length = array.length;\n    var value;\n    var conditionLoop = function () { return index < length; };\n    var bodyLoop = function () {\n        var value = array[index];\n        var promise = fn(value);\n        index++;\n        return promise;\n    };\n    return asyncLoop(bodyLoop, conditionLoop, delay);\n}\nexports.asyncForOf = asyncForOf;\nfunction waitForDom() {\n    return new Promise(function (resolve) {\n        document.addEventListener('DOMContentLoaded', function () { return resolve(); });\n    });\n}\nexports.waitForDom = waitForDom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils.ts\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}