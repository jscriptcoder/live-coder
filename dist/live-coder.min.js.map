{"version":3,"sources":["webpack:///dist/live-coder.min.js","webpack:///webpack/bootstrap 645352e9e4a2e5433b2f","webpack:///./src/index.ts","webpack:///./src/deferred.ts","webpack:///./src/utils.ts"],"names":["Live","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","deferred_1","utils_1","Coder","config","this","Object","assign","DEFAULT_CONFIG","domReady","waitForDom","paused","Deferred","isPaused","init","isElementAttached","$elem","parentElement","appendIfApply","apply","$container","toLowerCase","appendChild","prototype","_this","then","$runner","document","getElementsByTagName","body","$defContainer","createElement","defaultContainer","$body","$display","getDisplay","pauseOnClick","togglePauseListener","togglePause","bind","addEventListener","pause","resume","evalElement","tagName","props","$appendTo","_i","_a","keys","length","propName","querySelector","displayClass","createDisplay","className","createStyle","type","createScript","createDirective","dirClass","createCode","createStylesheetLink","rel","writeAndScroll","char","$code","writeChar","textContent","scrollTop","scrollHeight","continue","continuePromise","Promise","all","promise","run","code","$style","$element","elemInnerHtml","$script","$directive","lines","trim","split","asyncForOf","line","forOfPromise","returnPromise","resolve","chars","matchDir","match","DIR_RE","typingSpeed","innerHTML","directive","rest","slice","cssClass","jsClass","elem","_b","matchSel","SEL_RE","_c","symbol","name_1","htmlClass","window","setTypingSpeed","setWriteChar","timeout","setTimeout","getDeferredPromise","loadStyle","url","link","href","loadScript","script","deferred","onload","src","destroy","removeEventListener","reject","asyncLoop","fn","condition","delay","loop","catch","array","index","conditionLoop","bodyLoop","value","test","readyState"],"mappings":"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","file":"dist/live-coder.min.js","sourcesContent":["var Live =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar deferred_1 = __webpack_require__(1);\n\tvar utils_1 = __webpack_require__(2);\n\tvar Coder = (function () {\n\t    function Coder(config) {\n\t        if (config === void 0) { config = {}; }\n\t        this.config = Object.assign({}, Coder.DEFAULT_CONFIG, config);\n\t        this.domReady = utils_1.waitForDom();\n\t        this.paused = new deferred_1.Deferred();\n\t        this.isPaused = true;\n\t        this.init();\n\t    }\n\t    Coder.isElementAttached = function ($elem) {\n\t        return !!$elem.parentElement;\n\t    };\n\t    Coder.appendIfApply = function (apply, $elem, $container) {\n\t        if (apply &&\n\t            $elem &&\n\t            apply.toLowerCase() === 'apply' &&\n\t            !Coder.isElementAttached($elem)) {\n\t            $container && $container.appendChild($elem);\n\t        }\n\t    };\n\t    Coder.prototype.init = function () {\n\t        var _this = this;\n\t        this.domReady.then(function () {\n\t            _this.$runner = document.getElementsByTagName('head')[0] || document.body;\n\t            _this.$defContainer = _this.createElement(_this.config.defaultContainer);\n\t            _this.$body = document.body;\n\t            _this.$display = _this.getDisplay();\n\t            if (_this.config.pauseOnClick) {\n\t                _this.togglePauseListener = _this.togglePause.bind(_this);\n\t                document.addEventListener('click', _this.togglePauseListener);\n\t            }\n\t            if (_this.config.paused) {\n\t                _this.pause();\n\t            }\n\t            else {\n\t                _this.resume();\n\t            }\n\t        });\n\t    };\n\t    Coder.prototype.evalElement = function ($elem) {\n\t        this.$runner.appendChild($elem);\n\t    };\n\t    Coder.prototype.togglePause = function () {\n\t        if (this.isPaused) {\n\t            this.resume();\n\t        }\n\t        else {\n\t            this.pause();\n\t        }\n\t    };\n\t    Coder.prototype.createElement = function (tagName, props, $appendTo) {\n\t        if (props === void 0) { props = {}; }\n\t        var $elem = document.createElement(tagName);\n\t        for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n\t            var propName = _a[_i];\n\t            $elem[propName] = props[propName];\n\t        }\n\t        if ($appendTo) {\n\t            $appendTo.appendChild($elem);\n\t        }\n\t        return $elem;\n\t    };\n\t    Coder.prototype.getDisplay = function () {\n\t        return document.querySelector(\".\" + this.config.displayClass) || this.createDisplay();\n\t    };\n\t    Coder.prototype.createDisplay = function () {\n\t        return this.createElement('pre', { className: this.config.displayClass }, document.body);\n\t    };\n\t    Coder.prototype.createStyle = function () {\n\t        return this.createElement('style', { type: 'text/css' });\n\t    };\n\t    Coder.prototype.createScript = function () {\n\t        return this.createElement('script', { type: 'text/javascript' });\n\t    };\n\t    Coder.prototype.createDirective = function () {\n\t        return this.createElement('code', { className: this.config.dirClass });\n\t    };\n\t    Coder.prototype.createCode = function (className) {\n\t        return this.createElement('code', { className: className });\n\t    };\n\t    Coder.prototype.createStylesheetLink = function () {\n\t        return this.createElement('link', {\n\t            rel: 'stylesheet',\n\t            type: 'text/css'\n\t        });\n\t    };\n\t    Coder.prototype.writeAndScroll = function (char, $code) {\n\t        if (!Coder.isElementAttached($code)) {\n\t            this.$display.appendChild($code);\n\t        }\n\t        if (typeof this.config.writeChar === 'function') {\n\t            this.config.writeChar(char, $code);\n\t        }\n\t        else {\n\t            $code.textContent += char;\n\t        }\n\t        this.$display.scrollTop = this.$display.scrollHeight;\n\t    };\n\t    Coder.prototype.continue = function (continuePromise) {\n\t        return Promise.all([this.paused.promise, continuePromise]);\n\t    };\n\t    Coder.prototype.run = function (code) {\n\t        var _this = this;\n\t        if (code === void 0) { code = ''; }\n\t        return this.continue(this.domReady).then(function () {\n\t            var lines = code.trim().split('\\n');\n\t            var $style;\n\t            var $element;\n\t            var elemInnerHtml;\n\t            var $script;\n\t            var $directive;\n\t            var $code;\n\t            return utils_1.asyncForOf(function (line) {\n\t                // will resolve for each line processed (either directive or code)\n\t                var forOfPromise;\n\t                // resolved promise by default until await/promise directive\n\t                var returnPromise = Promise.resolve();\n\t                var chars = line.split('');\n\t                var matchDir = line.match(Coder.DIR_RE);\n\t                if (matchDir) {\n\t                    // we're gonna write a directive on the display\n\t                    $directive = _this.createDirective();\n\t                    forOfPromise = utils_1.asyncForOf(function (char) {\n\t                        _this.writeAndScroll(char, $directive);\n\t                        return _this.continue(returnPromise);\n\t                    }, chars, _this.config.typingSpeed).then(function () {\n\t                        _this.$display.innerHTML += '\\n';\n\t                        var _a = matchDir[1].split(':'), directive = _a[0], rest = _a.slice(1);\n\t                        switch (directive.toLowerCase()) {\n\t                            case 'css':\n\t                                // --- css\n\t                                // --- css:apply\n\t                                $script = null;\n\t                                $element = null;\n\t                                elemInnerHtml = '';\n\t                                $style = _this.createStyle();\n\t                                $code = _this.createCode(_this.config.cssClass);\n\t                                Coder.appendIfApply(rest[0], $style, _this.$runner);\n\t                                break;\n\t                            case 'js':\n\t                                $style = null;\n\t                                $element = null;\n\t                                elemInnerHtml = '';\n\t                                $script = _this.createScript();\n\t                                $code = _this.createCode(_this.config.jsClass);\n\t                                // can't be apply at this point, only at the end,\n\t                                // would throw exeptions\n\t                                break;\n\t                            case 'html':\n\t                                // --- html ($defContainer)\n\t                                // --- html:apply ($defContainer)\n\t                                // --- html:tag\n\t                                // --- html:tag.class\n\t                                // --- html:.class (tag = div)\n\t                                // --- html:tag#id\n\t                                // --- html:#id (tag = div)\n\t                                // --- html:tag:apply\n\t                                // --- html:apply:tag\n\t                                $script = null;\n\t                                $style = null;\n\t                                elemInnerHtml = '';\n\t                                if (rest[0]) {\n\t                                    var elem = rest[0], apply = rest[1];\n\t                                    // let's swap if the first one is \"apply\"\n\t                                    if (elem.toLowerCase() === 'apply') {\n\t                                        _b = [apply || '', elem], elem = _b[0], apply = _b[1];\n\t                                    }\n\t                                    var matchSel = elem.match(Coder.SEL_RE);\n\t                                    // valid selector?\n\t                                    if (elem && matchSel) {\n\t                                        $element = document.querySelector(elem);\n\t                                        // does the element exist in the DOM?\n\t                                        if (!$element) {\n\t                                            var _c = [\n\t                                                matchSel[1] || 'div',\n\t                                                matchSel[3],\n\t                                                matchSel[4]\n\t                                            ], tagName = _c[0], symbol = _c[1], name_1 = _c[2];\n\t                                            $element = _this.createElement(tagName);\n\t                                            if (symbol && name_1) {\n\t                                                // I know, this is crappy. Only supports classes or ids\n\t                                                // and not even combined.\n\t                                                // TODO: don't be lazy and make it better\n\t                                                switch (symbol) {\n\t                                                    case '.':\n\t                                                        $element.className = name_1;\n\t                                                        break;\n\t                                                    case '#':\n\t                                                        $element.id = name_1;\n\t                                                        break;\n\t                                                }\n\t                                            }\n\t                                            Coder.appendIfApply(apply, $element, _this.$body);\n\t                                        }\n\t                                    }\n\t                                    else {\n\t                                        $element = _this.$defContainer;\n\t                                        Coder.appendIfApply(apply, $element, _this.$body);\n\t                                    }\n\t                                }\n\t                                $element = $element || _this.$defContainer;\n\t                                $code = _this.createCode(_this.config.htmlClass);\n\t                                // in case there was already content\n\t                                // we can continue writing html in the element\n\t                                elemInnerHtml = $element.innerHTML;\n\t                                break;\n\t                            case 'apply':\n\t                                if ($style && !Coder.isElementAttached($style)) {\n\t                                    _this.evalElement($style);\n\t                                    $style = _this.createStyle();\n\t                                    $code = _this.createCode(_this.config.cssClass);\n\t                                }\n\t                                else if ($element && !Coder.isElementAttached($element)) {\n\t                                    _this.$body.appendChild($element);\n\t                                    $code = _this.createCode(_this.config.htmlClass);\n\t                                }\n\t                                else if ($script && !Coder.isElementAttached($script)) {\n\t                                    _this.evalElement($script);\n\t                                    $script = _this.createScript();\n\t                                    $code = _this.createCode(_this.config.jsClass);\n\t                                }\n\t                                break;\n\t                            case 'await': // --- await:promiseVar\n\t                            case 'promise':\n\t                                if (window[rest[0]] instanceof Promise) {\n\t                                    returnPromise = window[rest[0]];\n\t                                }\n\t                                break;\n\t                        }\n\t                        return _this.continue(returnPromise);\n\t                        var _b;\n\t                    });\n\t                }\n\t                else {\n\t                    forOfPromise = utils_1.asyncForOf(function (char) {\n\t                        _this.writeAndScroll(char, $code);\n\t                        if ($style) {\n\t                            $style.textContent += char;\n\t                        }\n\t                        else if ($element) {\n\t                            // in order to be able to write dynamic html and\n\t                            // see the changes right away, we need to store\n\t                            // the html as a string and innerHTML this string\n\t                            // into the the element right away. If we don't do so,\n\t                            // we lose markup because it becomes invalid and gets lost\n\t                            elemInnerHtml += char;\n\t                            $element.innerHTML = elemInnerHtml;\n\t                        }\n\t                        else if ($script) {\n\t                            $script.textContent += char;\n\t                        }\n\t                        return _this.continue(returnPromise);\n\t                    }, chars, _this.config.typingSpeed).then(function () {\n\t                        _this.writeAndScroll('\\n', $code);\n\t                        if ($style) {\n\t                            $style.textContent += '\\n';\n\t                        }\n\t                        else if ($script) {\n\t                            $script.textContent += '\\n';\n\t                        }\n\t                        // we don't care about line breaks in the html element\n\t                        return _this.continue(returnPromise);\n\t                    });\n\t                }\n\t                return forOfPromise;\n\t            }, lines).then(function () {\n\t                $style = null;\n\t                $element = null;\n\t                elemInnerHtml = '';\n\t                $script = null;\n\t                $directive = null;\n\t                $code = null;\n\t                return Promise.resolve();\n\t            });\n\t        });\n\t    };\n\t    Coder.prototype.setTypingSpeed = function (typingSpeed) {\n\t        this.config.typingSpeed = typingSpeed;\n\t    };\n\t    Coder.prototype.setWriteChar = function (writeChar) {\n\t        this.config.writeChar = writeChar;\n\t    };\n\t    Coder.prototype.pause = function (timeout) {\n\t        var _this = this;\n\t        this.paused = new deferred_1.Deferred();\n\t        this.isPaused = true;\n\t        if (typeof timeout === 'number') {\n\t            setTimeout(function () { return _this.resume(); }, timeout);\n\t        }\n\t    };\n\t    Coder.prototype.resume = function () {\n\t        this.paused.resolve();\n\t        this.isPaused = false;\n\t    };\n\t    Coder.prototype.getDeferredPromise = function () {\n\t        return new deferred_1.Deferred();\n\t    };\n\t    Coder.prototype.loadStyle = function (url) {\n\t        var link = this.createStylesheetLink();\n\t        link.href = url;\n\t        this.evalElement(link);\n\t    };\n\t    Coder.prototype.loadScript = function (url) {\n\t        var script = this.createScript();\n\t        var deferred = this.getDeferredPromise();\n\t        script.onload = deferred.resolve;\n\t        script.src = url;\n\t        this.evalElement(script);\n\t        return deferred.promise;\n\t    };\n\t    Coder.prototype.destroy = function () {\n\t        if (this.togglePauseListener) {\n\t            document.removeEventListener('click', this.togglePauseListener);\n\t        }\n\t    };\n\t    Coder.DIR_RE = /^\\s*---\\s*([a-z0-9|\\-|_|\\.|#|:]+)?/i;\n\t    Coder.SEL_RE = /^([a-z0-9|\\-|_]+)?((\\.|#)([a-z0-9|\\-|_]+))?$/i;\n\t    Coder.DEFAULT_CONFIG = {\n\t        displayClass: 'live-coder__display',\n\t        dirClass: 'directive',\n\t        htmlClass: 'html',\n\t        cssClass: 'css',\n\t        jsClass: 'javascript',\n\t        defaultContainer: 'default-container',\n\t        typingSpeed: 50,\n\t        pauseOnClick: true,\n\t        paused: false,\n\t        writeChar: function (char, $code) {\n\t            $code.textContent += char;\n\t        }\n\t    };\n\t    return Coder;\n\t}());\n\texports.Coder = Coder;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar Deferred = (function () {\n\t    function Deferred() {\n\t        var _this = this;\n\t        this.promise = new Promise(function (resolve, reject) {\n\t            _this.resolve = resolve;\n\t            _this.reject = reject;\n\t        });\n\t    }\n\t    return Deferred;\n\t}());\n\texports.Deferred = Deferred;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar deferred_1 = __webpack_require__(1);\n\tfunction asyncLoop(fn, condition, delay) {\n\t    var deferred = new deferred_1.Deferred();\n\t    var loop = function () {\n\t        if (condition()) {\n\t            fn()\n\t                .then(function () {\n\t                if (delay) {\n\t                    setTimeout(loop, delay);\n\t                }\n\t                else {\n\t                    loop();\n\t                }\n\t            })\n\t                .catch(function () { return deferred.reject(); });\n\t        }\n\t        else {\n\t            deferred.resolve();\n\t        }\n\t    };\n\t    loop();\n\t    return deferred.promise;\n\t}\n\texports.asyncLoop = asyncLoop;\n\tfunction asyncForOf(fn, array, delay) {\n\t    var index = 0;\n\t    var length = array.length;\n\t    var value;\n\t    var conditionLoop = function () { return index < length; };\n\t    var bodyLoop = function () {\n\t        var value = array[index];\n\t        var promise = fn(value);\n\t        index++;\n\t        return promise;\n\t    };\n\t    return asyncLoop(bodyLoop, conditionLoop, delay);\n\t}\n\texports.asyncForOf = asyncForOf;\n\tfunction waitForDom() {\n\t    return new Promise(function (resolve) {\n\t        if (/comp|inter|loaded/.test(document.readyState)) {\n\t            resolve();\n\t        }\n\t        else {\n\t            document.addEventListener('DOMContentLoaded', function () { return resolve(); });\n\t        }\n\t    });\n\t}\n\texports.waitForDom = waitForDom;\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// dist/live-coder.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 645352e9e4a2e5433b2f","\"use strict\";\nvar deferred_1 = require('./deferred');\nvar utils_1 = require('./utils');\nvar Coder = (function () {\n    function Coder(config) {\n        if (config === void 0) { config = {}; }\n        this.config = Object.assign({}, Coder.DEFAULT_CONFIG, config);\n        this.domReady = utils_1.waitForDom();\n        this.paused = new deferred_1.Deferred();\n        this.isPaused = true;\n        this.init();\n    }\n    Coder.isElementAttached = function ($elem) {\n        return !!$elem.parentElement;\n    };\n    Coder.appendIfApply = function (apply, $elem, $container) {\n        if (apply &&\n            $elem &&\n            apply.toLowerCase() === 'apply' &&\n            !Coder.isElementAttached($elem)) {\n            $container && $container.appendChild($elem);\n        }\n    };\n    Coder.prototype.init = function () {\n        var _this = this;\n        this.domReady.then(function () {\n            _this.$runner = document.getElementsByTagName('head')[0] || document.body;\n            _this.$defContainer = _this.createElement(_this.config.defaultContainer);\n            _this.$body = document.body;\n            _this.$display = _this.getDisplay();\n            if (_this.config.pauseOnClick) {\n                _this.togglePauseListener = _this.togglePause.bind(_this);\n                document.addEventListener('click', _this.togglePauseListener);\n            }\n            if (_this.config.paused) {\n                _this.pause();\n            }\n            else {\n                _this.resume();\n            }\n        });\n    };\n    Coder.prototype.evalElement = function ($elem) {\n        this.$runner.appendChild($elem);\n    };\n    Coder.prototype.togglePause = function () {\n        if (this.isPaused) {\n            this.resume();\n        }\n        else {\n            this.pause();\n        }\n    };\n    Coder.prototype.createElement = function (tagName, props, $appendTo) {\n        if (props === void 0) { props = {}; }\n        var $elem = document.createElement(tagName);\n        for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n            var propName = _a[_i];\n            $elem[propName] = props[propName];\n        }\n        if ($appendTo) {\n            $appendTo.appendChild($elem);\n        }\n        return $elem;\n    };\n    Coder.prototype.getDisplay = function () {\n        return document.querySelector(\".\" + this.config.displayClass) || this.createDisplay();\n    };\n    Coder.prototype.createDisplay = function () {\n        return this.createElement('pre', { className: this.config.displayClass }, document.body);\n    };\n    Coder.prototype.createStyle = function () {\n        return this.createElement('style', { type: 'text/css' });\n    };\n    Coder.prototype.createScript = function () {\n        return this.createElement('script', { type: 'text/javascript' });\n    };\n    Coder.prototype.createDirective = function () {\n        return this.createElement('code', { className: this.config.dirClass });\n    };\n    Coder.prototype.createCode = function (className) {\n        return this.createElement('code', { className: className });\n    };\n    Coder.prototype.createStylesheetLink = function () {\n        return this.createElement('link', {\n            rel: 'stylesheet',\n            type: 'text/css'\n        });\n    };\n    Coder.prototype.writeAndScroll = function (char, $code) {\n        if (!Coder.isElementAttached($code)) {\n            this.$display.appendChild($code);\n        }\n        if (typeof this.config.writeChar === 'function') {\n            this.config.writeChar(char, $code);\n        }\n        else {\n            $code.textContent += char;\n        }\n        this.$display.scrollTop = this.$display.scrollHeight;\n    };\n    Coder.prototype.continue = function (continuePromise) {\n        return Promise.all([this.paused.promise, continuePromise]);\n    };\n    Coder.prototype.run = function (code) {\n        var _this = this;\n        if (code === void 0) { code = ''; }\n        return this.continue(this.domReady).then(function () {\n            var lines = code.trim().split('\\n');\n            var $style;\n            var $element;\n            var elemInnerHtml;\n            var $script;\n            var $directive;\n            var $code;\n            return utils_1.asyncForOf(function (line) {\n                // will resolve for each line processed (either directive or code)\n                var forOfPromise;\n                // resolved promise by default until await/promise directive\n                var returnPromise = Promise.resolve();\n                var chars = line.split('');\n                var matchDir = line.match(Coder.DIR_RE);\n                if (matchDir) {\n                    // we're gonna write a directive on the display\n                    $directive = _this.createDirective();\n                    forOfPromise = utils_1.asyncForOf(function (char) {\n                        _this.writeAndScroll(char, $directive);\n                        return _this.continue(returnPromise);\n                    }, chars, _this.config.typingSpeed).then(function () {\n                        _this.$display.innerHTML += '\\n';\n                        var _a = matchDir[1].split(':'), directive = _a[0], rest = _a.slice(1);\n                        switch (directive.toLowerCase()) {\n                            case 'css':\n                                // --- css\n                                // --- css:apply\n                                $script = null;\n                                $element = null;\n                                elemInnerHtml = '';\n                                $style = _this.createStyle();\n                                $code = _this.createCode(_this.config.cssClass);\n                                Coder.appendIfApply(rest[0], $style, _this.$runner);\n                                break;\n                            case 'js':\n                                $style = null;\n                                $element = null;\n                                elemInnerHtml = '';\n                                $script = _this.createScript();\n                                $code = _this.createCode(_this.config.jsClass);\n                                // can't be apply at this point, only at the end,\n                                // would throw exeptions\n                                break;\n                            case 'html':\n                                // --- html ($defContainer)\n                                // --- html:apply ($defContainer)\n                                // --- html:tag\n                                // --- html:tag.class\n                                // --- html:.class (tag = div)\n                                // --- html:tag#id\n                                // --- html:#id (tag = div)\n                                // --- html:tag:apply\n                                // --- html:apply:tag\n                                $script = null;\n                                $style = null;\n                                elemInnerHtml = '';\n                                if (rest[0]) {\n                                    var elem = rest[0], apply = rest[1];\n                                    // let's swap if the first one is \"apply\"\n                                    if (elem.toLowerCase() === 'apply') {\n                                        _b = [apply || '', elem], elem = _b[0], apply = _b[1];\n                                    }\n                                    var matchSel = elem.match(Coder.SEL_RE);\n                                    // valid selector?\n                                    if (elem && matchSel) {\n                                        $element = document.querySelector(elem);\n                                        // does the element exist in the DOM?\n                                        if (!$element) {\n                                            var _c = [\n                                                matchSel[1] || 'div',\n                                                matchSel[3],\n                                                matchSel[4]\n                                            ], tagName = _c[0], symbol = _c[1], name_1 = _c[2];\n                                            $element = _this.createElement(tagName);\n                                            if (symbol && name_1) {\n                                                // I know, this is crappy. Only supports classes or ids\n                                                // and not even combined.\n                                                // TODO: don't be lazy and make it better\n                                                switch (symbol) {\n                                                    case '.':\n                                                        $element.className = name_1;\n                                                        break;\n                                                    case '#':\n                                                        $element.id = name_1;\n                                                        break;\n                                                }\n                                            }\n                                            Coder.appendIfApply(apply, $element, _this.$body);\n                                        }\n                                    }\n                                    else {\n                                        $element = _this.$defContainer;\n                                        Coder.appendIfApply(apply, $element, _this.$body);\n                                    }\n                                }\n                                $element = $element || _this.$defContainer;\n                                $code = _this.createCode(_this.config.htmlClass);\n                                // in case there was already content\n                                // we can continue writing html in the element\n                                elemInnerHtml = $element.innerHTML;\n                                break;\n                            case 'apply':\n                                if ($style && !Coder.isElementAttached($style)) {\n                                    _this.evalElement($style);\n                                    $style = _this.createStyle();\n                                    $code = _this.createCode(_this.config.cssClass);\n                                }\n                                else if ($element && !Coder.isElementAttached($element)) {\n                                    _this.$body.appendChild($element);\n                                    $code = _this.createCode(_this.config.htmlClass);\n                                }\n                                else if ($script && !Coder.isElementAttached($script)) {\n                                    _this.evalElement($script);\n                                    $script = _this.createScript();\n                                    $code = _this.createCode(_this.config.jsClass);\n                                }\n                                break;\n                            case 'await': // --- await:promiseVar\n                            case 'promise':\n                                if (window[rest[0]] instanceof Promise) {\n                                    returnPromise = window[rest[0]];\n                                }\n                                break;\n                        }\n                        return _this.continue(returnPromise);\n                        var _b;\n                    });\n                }\n                else {\n                    forOfPromise = utils_1.asyncForOf(function (char) {\n                        _this.writeAndScroll(char, $code);\n                        if ($style) {\n                            $style.textContent += char;\n                        }\n                        else if ($element) {\n                            // in order to be able to write dynamic html and\n                            // see the changes right away, we need to store\n                            // the html as a string and innerHTML this string\n                            // into the the element right away. If we don't do so,\n                            // we lose markup because it becomes invalid and gets lost\n                            elemInnerHtml += char;\n                            $element.innerHTML = elemInnerHtml;\n                        }\n                        else if ($script) {\n                            $script.textContent += char;\n                        }\n                        return _this.continue(returnPromise);\n                    }, chars, _this.config.typingSpeed).then(function () {\n                        _this.writeAndScroll('\\n', $code);\n                        if ($style) {\n                            $style.textContent += '\\n';\n                        }\n                        else if ($script) {\n                            $script.textContent += '\\n';\n                        }\n                        // we don't care about line breaks in the html element\n                        return _this.continue(returnPromise);\n                    });\n                }\n                return forOfPromise;\n            }, lines).then(function () {\n                $style = null;\n                $element = null;\n                elemInnerHtml = '';\n                $script = null;\n                $directive = null;\n                $code = null;\n                return Promise.resolve();\n            });\n        });\n    };\n    Coder.prototype.setTypingSpeed = function (typingSpeed) {\n        this.config.typingSpeed = typingSpeed;\n    };\n    Coder.prototype.setWriteChar = function (writeChar) {\n        this.config.writeChar = writeChar;\n    };\n    Coder.prototype.pause = function (timeout) {\n        var _this = this;\n        this.paused = new deferred_1.Deferred();\n        this.isPaused = true;\n        if (typeof timeout === 'number') {\n            setTimeout(function () { return _this.resume(); }, timeout);\n        }\n    };\n    Coder.prototype.resume = function () {\n        this.paused.resolve();\n        this.isPaused = false;\n    };\n    Coder.prototype.getDeferredPromise = function () {\n        return new deferred_1.Deferred();\n    };\n    Coder.prototype.loadStyle = function (url) {\n        var link = this.createStylesheetLink();\n        link.href = url;\n        this.evalElement(link);\n    };\n    Coder.prototype.loadScript = function (url) {\n        var script = this.createScript();\n        var deferred = this.getDeferredPromise();\n        script.onload = deferred.resolve;\n        script.src = url;\n        this.evalElement(script);\n        return deferred.promise;\n    };\n    Coder.prototype.destroy = function () {\n        if (this.togglePauseListener) {\n            document.removeEventListener('click', this.togglePauseListener);\n        }\n    };\n    Coder.DIR_RE = /^\\s*---\\s*([a-z0-9|\\-|_|\\.|#|:]+)?/i;\n    Coder.SEL_RE = /^([a-z0-9|\\-|_]+)?((\\.|#)([a-z0-9|\\-|_]+))?$/i;\n    Coder.DEFAULT_CONFIG = {\n        displayClass: 'live-coder__display',\n        dirClass: 'directive',\n        htmlClass: 'html',\n        cssClass: 'css',\n        jsClass: 'javascript',\n        defaultContainer: 'default-container',\n        typingSpeed: 50,\n        pauseOnClick: true,\n        paused: false,\n        writeChar: function (char, $code) {\n            $code.textContent += char;\n        }\n    };\n    return Coder;\n}());\nexports.Coder = Coder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 0\n// module chunks = 0","\"use strict\";\nvar Deferred = (function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    }\n    return Deferred;\n}());\nexports.Deferred = Deferred;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/deferred.ts\n// module id = 1\n// module chunks = 0","\"use strict\";\nvar deferred_1 = require('./deferred');\nfunction asyncLoop(fn, condition, delay) {\n    var deferred = new deferred_1.Deferred();\n    var loop = function () {\n        if (condition()) {\n            fn()\n                .then(function () {\n                if (delay) {\n                    setTimeout(loop, delay);\n                }\n                else {\n                    loop();\n                }\n            })\n                .catch(function () { return deferred.reject(); });\n        }\n        else {\n            deferred.resolve();\n        }\n    };\n    loop();\n    return deferred.promise;\n}\nexports.asyncLoop = asyncLoop;\nfunction asyncForOf(fn, array, delay) {\n    var index = 0;\n    var length = array.length;\n    var value;\n    var conditionLoop = function () { return index < length; };\n    var bodyLoop = function () {\n        var value = array[index];\n        var promise = fn(value);\n        index++;\n        return promise;\n    };\n    return asyncLoop(bodyLoop, conditionLoop, delay);\n}\nexports.asyncForOf = asyncForOf;\nfunction waitForDom() {\n    return new Promise(function (resolve) {\n        if (/comp|inter|loaded/.test(document.readyState)) {\n            resolve();\n        }\n        else {\n            document.addEventListener('DOMContentLoaded', function () { return resolve(); });\n        }\n    });\n}\nexports.waitForDom = waitForDom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils.ts\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}